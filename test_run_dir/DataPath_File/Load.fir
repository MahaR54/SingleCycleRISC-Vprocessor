;buildInfoPackage: chisel3, version: 3.4.3, scalaVersion: 2.12.12, sbtVersion: 1.3.10
circuit Load : 
  module Load : 
    input clock : Clock
    input reset : UInt<1>
    output io : {flip fun3 : UInt<3>, flip in : UInt<8>[4], out : SInt<32>, flip adr : UInt<2>}
    
    io.out <= asSInt(UInt<1>("h00")) @[Load.scala 21:12]
    node _T = eq(io.fun3, UInt<3>("h00")) @[Load.scala 22:19]
    when _T : @[Load.scala 22:30]
      node _T_1 = eq(io.adr, UInt<1>("h00")) @[Load.scala 23:18]
      when _T_1 : @[Load.scala 23:25]
        node _io_out_T = bits(io.in[0], 7, 7) @[Load.scala 24:41]
        node _io_out_T_1 = bits(_io_out_T, 0, 0) @[Bitwise.scala 72:15]
        node io_out_hi = mux(_io_out_T_1, UInt<24>("h0ffffff"), UInt<24>("h00")) @[Bitwise.scala 72:12]
        node _io_out_T_2 = cat(io_out_hi, io.in[0]) @[Cat.scala 30:58]
        node _io_out_T_3 = asSInt(_io_out_T_2) @[Load.scala 24:56]
        io.out <= _io_out_T_3 @[Load.scala 24:16]
        skip @[Load.scala 23:25]
      else : @[Load.scala 25:30]
        node _T_2 = eq(io.adr, UInt<1>("h01")) @[Load.scala 25:23]
        when _T_2 : @[Load.scala 25:30]
          node _io_out_T_4 = bits(io.in[1], 7, 7) @[Load.scala 26:41]
          node _io_out_T_5 = bits(_io_out_T_4, 0, 0) @[Bitwise.scala 72:15]
          node io_out_hi_1 = mux(_io_out_T_5, UInt<24>("h0ffffff"), UInt<24>("h00")) @[Bitwise.scala 72:12]
          node _io_out_T_6 = cat(io_out_hi_1, io.in[1]) @[Cat.scala 30:58]
          node _io_out_T_7 = asSInt(_io_out_T_6) @[Load.scala 26:56]
          io.out <= _io_out_T_7 @[Load.scala 26:16]
          skip @[Load.scala 25:30]
        else : @[Load.scala 27:30]
          node _T_3 = eq(io.adr, UInt<2>("h02")) @[Load.scala 27:23]
          when _T_3 : @[Load.scala 27:30]
            node _io_out_T_8 = bits(io.in[2], 7, 7) @[Load.scala 28:41]
            node _io_out_T_9 = bits(_io_out_T_8, 0, 0) @[Bitwise.scala 72:15]
            node io_out_hi_2 = mux(_io_out_T_9, UInt<24>("h0ffffff"), UInt<24>("h00")) @[Bitwise.scala 72:12]
            node _io_out_T_10 = cat(io_out_hi_2, io.in[2]) @[Cat.scala 30:58]
            node _io_out_T_11 = asSInt(_io_out_T_10) @[Load.scala 28:56]
            io.out <= _io_out_T_11 @[Load.scala 28:16]
            skip @[Load.scala 27:30]
          else : @[Load.scala 29:30]
            node _T_4 = eq(io.adr, UInt<2>("h03")) @[Load.scala 29:23]
            when _T_4 : @[Load.scala 29:30]
              node _io_out_T_12 = bits(io.in[3], 7, 7) @[Load.scala 30:41]
              node _io_out_T_13 = bits(_io_out_T_12, 0, 0) @[Bitwise.scala 72:15]
              node io_out_hi_3 = mux(_io_out_T_13, UInt<24>("h0ffffff"), UInt<24>("h00")) @[Bitwise.scala 72:12]
              node _io_out_T_14 = cat(io_out_hi_3, io.in[3]) @[Cat.scala 30:58]
              node _io_out_T_15 = asSInt(_io_out_T_14) @[Load.scala 30:56]
              io.out <= _io_out_T_15 @[Load.scala 30:16]
              skip @[Load.scala 29:30]
      skip @[Load.scala 22:30]
    else : @[Load.scala 32:35]
      node _T_5 = eq(io.fun3, UInt<3>("h01")) @[Load.scala 32:24]
      when _T_5 : @[Load.scala 32:35]
        node _T_6 = eq(io.adr, UInt<1>("h00")) @[Load.scala 33:20]
        when _T_6 : @[Load.scala 33:27]
          node io_out_lo = cat(io.in[1], io.in[0]) @[Cat.scala 30:58]
          node _io_out_T_16 = bits(io_out_lo, 15, 15) @[Load.scala 35:37]
          node _io_out_T_17 = bits(_io_out_T_16, 0, 0) @[Bitwise.scala 72:15]
          node io_out_hi_4 = mux(_io_out_T_17, UInt<16>("h0ffff"), UInt<16>("h00")) @[Bitwise.scala 72:12]
          node _io_out_T_18 = cat(io_out_hi_4, io_out_lo) @[Cat.scala 30:58]
          node _io_out_T_19 = asSInt(_io_out_T_18) @[Load.scala 35:49]
          io.out <= _io_out_T_19 @[Load.scala 35:18]
          skip @[Load.scala 33:27]
        else : @[Load.scala 36:33]
          node _T_7 = eq(io.adr, UInt<1>("h01")) @[Load.scala 36:26]
          when _T_7 : @[Load.scala 36:33]
            node io_out_lo_1 = cat(io.in[2], io.in[1]) @[Cat.scala 30:58]
            node _io_out_T_20 = bits(io_out_lo_1, 15, 15) @[Load.scala 38:37]
            node _io_out_T_21 = bits(_io_out_T_20, 0, 0) @[Bitwise.scala 72:15]
            node io_out_hi_5 = mux(_io_out_T_21, UInt<16>("h0ffff"), UInt<16>("h00")) @[Bitwise.scala 72:12]
            node _io_out_T_22 = cat(io_out_hi_5, io_out_lo_1) @[Cat.scala 30:58]
            node _io_out_T_23 = asSInt(_io_out_T_22) @[Load.scala 38:49]
            io.out <= _io_out_T_23 @[Load.scala 38:18]
            skip @[Load.scala 36:33]
          else : @[Load.scala 39:33]
            node _T_8 = eq(io.adr, UInt<2>("h02")) @[Load.scala 39:26]
            when _T_8 : @[Load.scala 39:33]
              node io_out_lo_2 = cat(io.in[3], io.in[2]) @[Cat.scala 30:58]
              node _io_out_T_24 = bits(io_out_lo_2, 15, 15) @[Load.scala 41:37]
              node _io_out_T_25 = bits(_io_out_T_24, 0, 0) @[Bitwise.scala 72:15]
              node io_out_hi_6 = mux(_io_out_T_25, UInt<16>("h0ffff"), UInt<16>("h00")) @[Bitwise.scala 72:12]
              node _io_out_T_26 = cat(io_out_hi_6, io_out_lo_2) @[Cat.scala 30:58]
              node _io_out_T_27 = asSInt(_io_out_T_26) @[Load.scala 41:49]
              io.out <= _io_out_T_27 @[Load.scala 41:18]
              skip @[Load.scala 39:33]
            else : @[Load.scala 42:33]
              node _T_9 = eq(io.adr, UInt<2>("h03")) @[Load.scala 42:26]
              when _T_9 : @[Load.scala 42:33]
                node io_out_lo_3 = cat(io.in[0], io.in[3]) @[Cat.scala 30:58]
                node _io_out_T_28 = bits(io_out_lo_3, 15, 15) @[Load.scala 44:37]
                node _io_out_T_29 = bits(_io_out_T_28, 0, 0) @[Bitwise.scala 72:15]
                node io_out_hi_7 = mux(_io_out_T_29, UInt<16>("h0ffff"), UInt<16>("h00")) @[Bitwise.scala 72:12]
                node _io_out_T_30 = cat(io_out_hi_7, io_out_lo_3) @[Cat.scala 30:58]
                node _io_out_T_31 = asSInt(_io_out_T_30) @[Load.scala 44:49]
                io.out <= _io_out_T_31 @[Load.scala 44:18]
                skip @[Load.scala 42:33]
        skip @[Load.scala 32:35]
      else : @[Load.scala 46:35]
        node _T_10 = eq(io.fun3, UInt<3>("h02")) @[Load.scala 46:24]
        when _T_10 : @[Load.scala 46:35]
          node io_out_lo_4 = cat(io.in[1], io.in[0]) @[Cat.scala 30:58]
          node io_out_hi_8 = cat(io.in[3], io.in[2]) @[Cat.scala 30:58]
          node _io_out_T_32 = cat(io_out_hi_8, io_out_lo_4) @[Cat.scala 30:58]
          node _io_out_T_33 = asSInt(_io_out_T_32) @[Load.scala 47:68]
          io.out <= _io_out_T_33 @[Load.scala 47:16]
          skip @[Load.scala 46:35]
        else : @[Load.scala 48:36]
          node _T_11 = eq(io.fun3, UInt<3>("h04")) @[Load.scala 48:24]
          when _T_11 : @[Load.scala 48:36]
            node _T_12 = eq(io.adr, UInt<1>("h00")) @[Load.scala 49:20]
            when _T_12 : @[Load.scala 49:27]
              node _io_out_T_34 = bits(io.in[0], 7, 7) @[Load.scala 50:42]
              node _io_out_T_35 = bits(_io_out_T_34, 0, 0) @[Bitwise.scala 72:15]
              node io_out_hi_9 = mux(_io_out_T_35, UInt<24>("h0ffffff"), UInt<24>("h00")) @[Bitwise.scala 72:12]
              node _io_out_T_36 = cat(io_out_hi_9, io.in[0]) @[Cat.scala 30:58]
              node _io_out_T_37 = asSInt(_io_out_T_36) @[Load.scala 50:65]
              io.out <= _io_out_T_37 @[Load.scala 50:16]
              skip @[Load.scala 49:27]
            else : @[Load.scala 51:31]
              node _T_13 = eq(io.adr, UInt<1>("h01")) @[Load.scala 51:24]
              when _T_13 : @[Load.scala 51:31]
                node _io_out_T_38 = bits(io.in[1], 7, 7) @[Load.scala 52:42]
                node _io_out_T_39 = bits(_io_out_T_38, 0, 0) @[Bitwise.scala 72:15]
                node io_out_hi_10 = mux(_io_out_T_39, UInt<24>("h0ffffff"), UInt<24>("h00")) @[Bitwise.scala 72:12]
                node _io_out_T_40 = cat(io_out_hi_10, io.in[1]) @[Cat.scala 30:58]
                node _io_out_T_41 = asSInt(_io_out_T_40) @[Load.scala 52:65]
                io.out <= _io_out_T_41 @[Load.scala 52:16]
                skip @[Load.scala 51:31]
              else : @[Load.scala 53:31]
                node _T_14 = eq(io.adr, UInt<2>("h02")) @[Load.scala 53:24]
                when _T_14 : @[Load.scala 53:31]
                  node _io_out_T_42 = bits(io.in[2], 7, 7) @[Load.scala 54:42]
                  node _io_out_T_43 = bits(_io_out_T_42, 0, 0) @[Bitwise.scala 72:15]
                  node io_out_hi_11 = mux(_io_out_T_43, UInt<24>("h0ffffff"), UInt<24>("h00")) @[Bitwise.scala 72:12]
                  node _io_out_T_44 = cat(io_out_hi_11, io.in[2]) @[Cat.scala 30:58]
                  node _io_out_T_45 = asSInt(_io_out_T_44) @[Load.scala 54:65]
                  io.out <= _io_out_T_45 @[Load.scala 54:16]
                  skip @[Load.scala 53:31]
                else : @[Load.scala 55:31]
                  node _T_15 = eq(io.adr, UInt<2>("h03")) @[Load.scala 55:24]
                  when _T_15 : @[Load.scala 55:31]
                    node _io_out_T_46 = bits(io.in[3], 7, 7) @[Load.scala 56:42]
                    node _io_out_T_47 = bits(_io_out_T_46, 0, 0) @[Bitwise.scala 72:15]
                    node io_out_hi_12 = mux(_io_out_T_47, UInt<24>("h0ffffff"), UInt<24>("h00")) @[Bitwise.scala 72:12]
                    node _io_out_T_48 = cat(io_out_hi_12, io.in[3]) @[Cat.scala 30:58]
                    node _io_out_T_49 = asSInt(_io_out_T_48) @[Load.scala 56:65]
                    io.out <= _io_out_T_49 @[Load.scala 56:16]
                    skip @[Load.scala 55:31]
            skip @[Load.scala 48:36]
          else : @[Load.scala 58:36]
            node _T_16 = eq(io.fun3, UInt<3>("h05")) @[Load.scala 58:24]
            when _T_16 : @[Load.scala 58:36]
              node _T_17 = eq(io.adr, UInt<1>("h00")) @[Load.scala 59:21]
              when _T_17 : @[Load.scala 59:28]
                node io_out_lo_5 = cat(io.in[1], io.in[0]) @[Cat.scala 30:58]
                node _io_out_T_50 = bits(io_out_lo_5, 15, 15) @[Load.scala 61:38]
                node _io_out_T_51 = bits(_io_out_T_50, 0, 0) @[Bitwise.scala 72:15]
                node io_out_hi_13 = mux(_io_out_T_51, UInt<16>("h0ffff"), UInt<16>("h00")) @[Bitwise.scala 72:12]
                node _io_out_T_52 = cat(io_out_hi_13, io_out_lo_5) @[Cat.scala 30:58]
                node _io_out_T_53 = asSInt(_io_out_T_52) @[Load.scala 61:58]
                io.out <= _io_out_T_53 @[Load.scala 61:18]
                skip @[Load.scala 59:28]
              else : @[Load.scala 62:33]
                node _T_18 = eq(io.adr, UInt<1>("h01")) @[Load.scala 62:26]
                when _T_18 : @[Load.scala 62:33]
                  node io_out_lo_6 = cat(io.in[2], io.in[1]) @[Cat.scala 30:58]
                  node _io_out_T_54 = bits(io_out_lo_6, 15, 15) @[Load.scala 64:38]
                  node _io_out_T_55 = bits(_io_out_T_54, 0, 0) @[Bitwise.scala 72:15]
                  node io_out_hi_14 = mux(_io_out_T_55, UInt<16>("h0ffff"), UInt<16>("h00")) @[Bitwise.scala 72:12]
                  node _io_out_T_56 = cat(io_out_hi_14, io_out_lo_6) @[Cat.scala 30:58]
                  node _io_out_T_57 = asSInt(_io_out_T_56) @[Load.scala 64:58]
                  io.out <= _io_out_T_57 @[Load.scala 64:18]
                  skip @[Load.scala 62:33]
                else : @[Load.scala 65:33]
                  node _T_19 = eq(io.adr, UInt<2>("h02")) @[Load.scala 65:26]
                  when _T_19 : @[Load.scala 65:33]
                    node io_out_lo_7 = cat(io.in[3], io.in[2]) @[Cat.scala 30:58]
                    node _io_out_T_58 = bits(io_out_lo_7, 15, 15) @[Load.scala 67:38]
                    node _io_out_T_59 = bits(_io_out_T_58, 0, 0) @[Bitwise.scala 72:15]
                    node io_out_hi_15 = mux(_io_out_T_59, UInt<16>("h0ffff"), UInt<16>("h00")) @[Bitwise.scala 72:12]
                    node _io_out_T_60 = cat(io_out_hi_15, io_out_lo_7) @[Cat.scala 30:58]
                    node _io_out_T_61 = asSInt(_io_out_T_60) @[Load.scala 67:58]
                    io.out <= _io_out_T_61 @[Load.scala 67:18]
                    skip @[Load.scala 65:33]
                  else : @[Load.scala 68:33]
                    node _T_20 = eq(io.adr, UInt<2>("h03")) @[Load.scala 68:26]
                    when _T_20 : @[Load.scala 68:33]
                      node io_out_lo_8 = cat(io.in[0], io.in[3]) @[Cat.scala 30:58]
                      node _io_out_T_62 = bits(io_out_lo_8, 15, 15) @[Load.scala 70:38]
                      node _io_out_T_63 = bits(_io_out_T_62, 0, 0) @[Bitwise.scala 72:15]
                      node io_out_hi_16 = mux(_io_out_T_63, UInt<16>("h0ffff"), UInt<16>("h00")) @[Bitwise.scala 72:12]
                      node _io_out_T_64 = cat(io_out_hi_16, io_out_lo_8) @[Cat.scala 30:58]
                      node _io_out_T_65 = asSInt(_io_out_T_64) @[Load.scala 70:58]
                      io.out <= _io_out_T_65 @[Load.scala 70:18]
                      skip @[Load.scala 68:33]
              skip @[Load.scala 58:36]
    
